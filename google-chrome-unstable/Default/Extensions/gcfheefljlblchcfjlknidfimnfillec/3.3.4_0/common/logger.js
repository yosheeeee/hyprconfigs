function t(s,i="info"){return{levels:["trace","debug","info","warn","error"],colors:["\x1B[34m","\x1B[35m","\x1B[32m","\x1B[33m","\x1B[31m"],level:i,namespace:s,setLevel(e){if(this.levels.includes(e))this.level=e;else throw new Error(`Invalid log level: ${e}`)},_log(e,...r){const o=this.levels.indexOf(e);o>=this.levels.indexOf(this.level)&&console[["debug","trace","info"].includes(e)?"log":e](Array.isArray(this.namespace)?`${this.colors[o]}${e.toUpperCase()}\x1B[0m: [${this.namespace.join("][")}]`:`[${this.namespace}]`,...r)},trace(...e){this._log("trace",...e)},debug(...e){this._log("debug",...e)},info(...e){this._log("info",...e)},log(...e){this._log("info",...e)},warn(...e){this._log("warn",...e)},error(...e){this._log("error",...e)}}}export{t as c};
