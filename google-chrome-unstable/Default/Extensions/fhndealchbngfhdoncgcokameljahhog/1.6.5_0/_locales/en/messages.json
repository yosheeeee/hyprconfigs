{
   "auto_enrollment_notification_message": {
      "description": "This is the message for a notification that will pop up to inform a user that they can automatically enroll a new certificate. [CHAR LIMIT=100]",
      "message": "Click here to automatically enroll a pre-configured certificate."
   },
   "auto_enrollment_notification_title": {
      "description": "This is the title for a notification that will pop up to inform a user that they can automatically enroll a new certificate. [CHAR LIMIT=50]",
      "message": "Enroll Certificate"
   },
   "cea_cep_network": {
      "description": "When attempting to find a matching certificate template using the CEP endpoint with verified access, we were unable to receive a successful response. [CHAR LIMIT=200]",
      "message": "Communicating with the configured CEP endpoint in the verified access enrollment flow failed. If this continues, contact your administrator."
   },
   "cea_cep_template": {
      "description": "During the verified access enrollment flow, we weren't able to find a match between the list of templates specified in managed policy and the list of templates from the result of a call to the CEP service. [CHAR LIMIT=200]",
      "message": "No matching certificate template was found. Please contact your administrator."
   },
   "cea_ces_denied": {
      "description": "When attempting to enroll for a cerficate using the CES endpoint with verified access, the response was a denial. [CHAR LIMIT=200]",
      "message": "The certificate request was denied by the Certificate Authority."
   },
   "cea_ces_network": {
      "description": "When attempting to enroll for a cerficate using the CES endpoint with verified access, the response was an error. [CHAR LIMIT=200]",
      "message": "Communicating with the configured CES endpoint in the verified access enrollment flow failed. If this continues, contact your administrator."
   },
   "cea_ces_pending": {
      "description": "When attempting to enroll for a cerficate using the CES endpoint with verified access, the response was left in a pending state. [CHAR LIMIT=200]",
      "message": "The certificate request was left pending by the Certificate Authority. Please contact your administrator."
   },
   "cea_error_other": {
      "description": "During the verified access enrollment flow, an error which was not recognized was encountered. [CHAR LIMIT=200]",
      "message": "An unknown error was encountered by the certificate enrollment agent during verified access enrollment. If this continues, contact your administrator."
   },
   "cea_google_network": {
      "description": "When attempting to verify the signed in user on the device, we were unable to receive a successful response from the configured Google VA server. [CHAR LIMIT=200]",
      "message": "Communicating with the configured Google verified access server failed. If this continues, contact your administrator."
   },
   "cea_google_reject": {
      "description": "When attempting to verify the signed in user on the device, that user's Chrome identity did not match the expected identiy of the verified access API. [CHAR LIMIT=200]",
      "message": "The verified access check was not successful for the Chrome identity of the signed in user on this device."
   },
   "cea_invalid_api_version": {
      "description": "The request from this extension (ChromeOS Certificate Requester) was for an invalid version, possibly too old, too new, or just malformed. The user should be notified to contact their administrator if this occurss multiple times. [CHAR LIMIT=200]",
      "message": "Request from ChromeOS Certificate Requester did not match the expected version. If this continues, contact your administrator."
   },
   "cea_ldap_network": {
      "description": "Failed to receive a successful response from the LDAP server. If this continues, contact your administrator. [CHAR LIMIT=200]",
      "message": "Communicating with the configured LDAP server failed. If this continues, contact your administrator."
   },
   "cea_ldap_user_verification": {
      "description": "The LDAP query used could not find the supplied username or it found the username associated with multiple instances. If this continues, contact your administrator. [CHAR LIMIT=200]",
      "message": "The username provided was not found or failed verification. Please check your username and try again. If this continues, contact your administrator."
   },
   "cea_locked_contact_admin": {
      "description": "During the verified access enrollment flow, too many requests were received which could result in lockout, so this request was denied to protect the user. The user should contact their administrator to have this fixed. [CHAR LIMIT=200]",
      "message": "The request failed due to lockout protection. Please contact your administrator."
   },
   "cea_locked_try_again": {
      "description": "During the verified access enrollment flow, too many requests were received which could result in lockout, so this request was denied to protect the user. The user can still retry later. [CHAR LIMIT=200]",
      "message": "The request failed due to lockout protection. Please try again later."
   },
   "cea_malformed_request": {
      "description": "The request from this extension (ChromeOS Certificate Requester) used a format that was not authenticated, missing fields, had too many fields, or sent a field of the wrong type (string for number for example). The user should be notified to contact their admin if this occurss multiple times. [CHAR LIMIT=200]",
      "message": "Request from ChromeOS Certificate Requester did not match the expected format. If this continues, contact your administrator."
   },
   "cea_no_api_failure": {
      "description": "The extension attempted to call the enterprise.platformsKeys API on the machine and failed. This could mean that the device does not have privileges to call the enterprise.platformKeys API, meaning it is likely not enrolled in the domain or configured properly. [CHAR LIMIT=200]",
      "message": "Could not access the enterprise.platformKeys API. Your device may not be enrolled in the domain."
   },
   "cea_qps_reject": {
      "description": "During the verified access enrollment flow, too many requests were received in a short time frame, so now all requests are being rejected to protect the server. The user can still retry later. [CHAR LIMIT=200]",
      "message": "The request was rejected to due to too many requests per second. Please wait a few minutes and try again."
   },
   "cea_timed_out": {
      "description": "Once a challenge was received, the local process to create a Verified Access challenge-response failed for some reason. The user should be notified to contact their administrator if this occurss multiple times. [CHAR LIMIT=200]",
      "message": "Getting a certificate through the verified access enrollment flow timed out. If this continues, contact your administrator."
   },
   "cea_va_failed": {
      "description": "During the verified access enrollment flow, the verified access API rejected the user's authentication causing the request to fail. [CHAR LIMIT=200]",
      "message": "The user's identity could not be confirmed with the verified access API."
   },
   "certificate_renewal_alert": {
      "description": "Message informing the user that a certificate was succesfully renewd. [CHAR LIMIT=100]",
      "message": "Certificate was succesfully renewed."
   },
   "certificate_renewal_failure_alert": {
      "description": "Error message showed when attempting to renew a certificate that sends the user to check the logs for more information. [CHAR LIMIT=200]",
      "message": "Failure: an error occurred while renewing a certificate. More details can be found on the console logs."
   },
   "empty_username": {
      "description": "The user supplied an empty username/email/userid/id so the request cannot proceed. [CHAR LIMIT=80]",
      "message": "The username field is required."
   },
   "extension_description": {
      "description": "Description of the extension. [CHAR LIMIT=44]",
      "message": "Request a certificate for your device."
   },
   "extension_name": {
      "description": "Title of the extension name. [CHAR LIMIT=60]",
      "message": "Certificate Enrollment for ChromeOS"
   },
   "extension_name_dev": {
      "description": "Title of the extension name for development users and testers. [CHAR LIMIT=65]",
      "message": "Certificate Enrollment for ChromeOS Dev"
   },
   "failure_title": {
      "description": "A title for a dialog box meant to show that the request failed or encountered an error. [CHAR LIMIT=20]",
      "message": "Failure"
   },
   "generate_challenge_response_failed": {
      "description": "Once a challenge was received, the local process to create a Verified Access challenge-response failed for some reason. The user should be notified to contact their administrator if this occurss multiple times. [CHAR LIMIT=200]",
      "message": "Unable to create a challenge-response for enrolling with Verified Access. If this continues, contact your administrator."
   },
   "get_challenge_failed": {
      "description": "When communicating with the Verified Access server endpoint, we received an invalid response. The user should be notified to contact their administrator if this occurs multiple times. [CHAR LIMIT=200]",
      "message": "Getting a challenge from the Verified Access endpoint failed. If this continues, contact your administrator."
   },
   "get_challenge_timed_out": {
      "description": "When communicating with the Verified Access server endpoint, the connection timed out. The user should be notified to contact their administrator if this occurs multiple times. [CHAR LIMIT=200]",
      "message": "Getting a challenge from the Verified Access endpoint timed out. If this continues, contact your administrator."
   },
   "invalid_credentials": {
      "description": "The user supplied either an invalid username/email/userid/id or password/passphrase/credential or both, so the server denied access. [CHAR LIMIT=120]",
      "message": "The server could not validate your username and password. One or both may be incorrect."
   },
   "invalid_policy_var": {
      "description": "The administrator who configures policy setup the policy wrong by naming a variable incorrectly or adding an extra variable that shouldn't be present. [CHAR LIMIT=200]",
      "message": "An invalid policy variable was specified.\nPolicy Variable Name: $KEY$\nPolicy Variable Value: $Value$",
      "placeholders": {
         "key": {
            "content": "$1",
            "example": "cep_proxy"
         },
         "value": {
            "content": "$2",
            "example": "https://someWebAddressGoesHere/service.svc/CES"
         }
      }
   },
   "kerberos_authentication_text": {
      "description": "An informational message shown to the user in place of username/password fields when Kerberos authentication is being used instead. The 'Chrome Settings > People > Kerberos tickets' part of the string should ideally match the strings used in Chrome Settings.",
      "message": "Your admin has configured certificates to be issued using Kerberos authentication. Click the $ENROLL_BUTTON_TEXT$ button to request a certificate. Kerberos tickets can be obtained via Chrome Settings > People > Kerberos tickets.",
      "placeholders": {
         "enroll_button_text": {
            "content": "$1",
            "example": "Enroll"
         }
      }
   },
   "login_cep_failure": {
      "description": "The extension attempted to contact a policy server specified in the managed policy. Contacting that server failed. [CHAR LIMIT=100]",
      "message": "Could not contact the policy server."
   },
   "login_device_help": {
      "description": "This is the text to display for a tooltip explaining what enrolling a device-wide certificate will do. [CHAR LIMIT=120]",
      "message": "Request a certificate for the entire device allowing others in your organization to use it."
   },
   "login_enrollment_failure": {
      "description": "The extension attempted to enroll to a URI specified by the server. That enrollment failed. [CHAR LIMIT=100]",
      "message": "Could not enroll to the specified uri."
   },
   "login_failure_alert": {
      "description": "Generic error message that sends the user to check the logs for more information. [CHAR LIMIT=100]",
      "message": "Failure: an error occurred. More details can be found on the console logs."
   },
   "login_help_center_text": {
      "description": "This is the text for a link to our help center article that explains how to use the extension. It should just be named Help Center or Support Center or similar. [CHAR LIMIT=20]",
      "message": "Help Center"
   },
   "login_hide_pending": {
      "description": "This should show up as a prompt to users when they want to hide some existing extra input boxes whenever they only want to issue a new request versus check on an old one. [CHAR LIMIT=100]",
      "message": "Hide extra fields for checking on pending requests?"
   },
   "login_invalid_character": {
      "description": "This should show up as an error to the user where he or she types a \u003C or > character into an input field, which we do not allow for security reasons. [CHAR LIMIT=100]",
      "message": "The characters \u003C and > are not allowed in this field."
   },
   "login_loading_text": {
      "description": "This is the text read to visually impaired users when the certificate request has been sent and the UI is waiting for a response. This should be very short since the request doesn't take long, but we don't want to leave users wondering what has happened. [CHAR LIMIT=60]",
      "message": "Certificate requested. Please wait."
   },
   "login_no_uri_failure": {
      "description": "The extension could not find any valid URI's in the server's response. [CHAR LIMIT=100]",
      "message": "No enrollment uris available to enroll to."
   },
   "login_privacy_link": {
      "description": "This is the text to display for a link that redirects to Google's privacy policy. [CHAR LIMIT=30]",
      "message": "Privacy Policy"
   },
   "login_query_uri": {
      "description": "This should show up as an error to the user where he or she supplied a uri that didn't start with https to the enrollment uri input field, which we do not allow for security reasons. [CHAR LIMIT=100]",
      "message": "An invalid enrollment URI was specified. The enrollment URI field should start with https."
   },
   "login_service_account_help": {
      "description": "This is the text to display for a tooltip explaining what using a service account will do. [CHAR LIMIT=120]",
      "message": "Request a certificate using the acount details provided by your administrator."
   },
   "login_show_pending": {
      "description": "This should show up as a prompt to users when they want to specify extra input in order to check on an old request versus issue a new one. [CHAR LIMIT=100]",
      "message": "Show extra fields for checking on pending requests?"
   },
   "login_success_alert": {
      "description": "Generic success message that tells the user the certificate he or she requested was generated and imported. [CHAR LIMIT=100]",
      "message": "Success: certificate generated and imported correctly!"
   },
   "managed_cep_empty_error": {
      "description": "This is an error message for when the variable cep_proxy_url was not set properly. It could not have been set or could have been set to empty. [CHAR LIMIT=100]",
      "message": "cep_proxy_url not set or set to empty."
   },
   "managed_cep_http_error": {
      "description": "This is an error message for when the variable cep_proxy_url was not set to a url starting with https://. [CHAR LIMIT=100]",
      "message": "cep_proxy_url not set to https."
   },
   "managed_certificate_renewal_error": {
      "description": "This is an error message for when the variable enable_certificate_renewal was not set properly. It must have been attempted to set it to a value other than AUTO, USER, or NONE. [CHAR LIMIT=100]",
      "message": "Attempt to set enable_certificate_renewal to unknown value."
   },
   "managed_clipboard_button": {
      "description": "The text for a button puts all the current logs into the user's clipboard for pasting elsewhere. [CHAR LIMIT=40]",
      "message": "Copy Logs to Clipboard"
   },
   "managed_company_url_http_error": {
      "description": "This is an error message for when the field help_url in the variable company_info was not set to a url starting with https://. [CHAR LIMIT=100]",
      "message": "help_url field in company_info not set to https."
   },
   "managed_help_text": {
      "description": "A question for users so that if they need additional help, they click the question and get redirected to a help center url. This should simply ask the user if they need assistance/help/more information or explanation. [CHAR LIMIT=44]",
      "message": "Need help?"
   },
   "managed_license_button": {
      "description": "The text for a button which redirects users to a page displaying our license information. [CHAR LIMIT=25]",
      "message": "About"
   },
   "managed_log_level_error": {
      "description": "This is an error message for when the variable log_level was not set properly. It must have been attempted to set it to a value other than NONE, ERROR, WARNING, INFO, or DEBUG. [CHAR LIMIT=100]",
      "message": "Attempt to set log_level to unknown value."
   },
   "managed_login_button": {
      "description": "The text to be displayed on a button that submits a login form with username and password credentials. [CHAR LIMIT=25]",
      "message": "Enroll"
   },
   "managed_login_device_wide_checkbox": {
      "description": "This is the text to display beside a checkbox. The checkbox is intended to ask the user if they want to attempt to install a device-wide/machine-wide/system certificate rather than a user certificate. [CHAR LIMIT=44]",
      "message": "Enroll Device-Wide Certificate"
   },
   "managed_login_header": {
      "description": "The header text to be displayed for the login page and certificate request process. [CHAR LIMIT=44]",
      "message": "Certificate Enrollment"
   },
   "managed_login_tab_label": {
      "description": "The label text for the new request tab. Should be very short. [CHAR LIMIT=20]",
      "message": "New Request"
   },
   "managed_login_use_service_account_checkbox": {
      "description": "This is the text to display beside a checkbox. The checkbox is intended to ask the user if they want to use the policy provided account details rather than their own. [CHAR LIMIT=44]",
      "message": "Use Service Account"
   },
   "managed_more_options": {
      "description": "The text of a pull down menu to be displayed before showing all the other options/configurations/links customers can use. [CHAR LIMIT=44]",
      "message": "More Options"
   },
   "managed_password_placeholder": {
      "description": "A placeholder/label used to identify a password field. [CHAR LIMIT=20]",
      "message": "Password"
   },
   "managed_policy_handling_info": {
      "description": "New managed policies were receiving and are now being populated into their respective variables. [CHAR LIMIT=100]",
      "message": "Handling changed policies."
   },
   "managed_policy_request_info": {
      "description": "An info message before sending a request to the backend/background script to get an updated managed policy. [CHAR LIMIT=100]",
      "message": "Requesting policy from backend."
   },
   "managed_policy_response_info": {
      "description": "An info message after receiving a response from the backend/background script with an updated managed policy. [CHAR LIMIT=100]",
      "message": "Policy update received from backend."
   },
   "managed_signature_algo_error": {
      "description": "This is an error message for when the variable signature_algo was not set properly. It must have been attempted to set it to a value other than SHA-256 or SHA-512. [CHAR LIMIT=100]",
      "message": "Attempt to set signature_algo to unknown value."
   },
   "managed_status_button": {
      "description": "The text to be displayed on a button that checks for a status update on a pending request. [CHAR LIMIT=25]",
      "message": "Check Status"
   },
   "managed_status_header": {
      "description": "The header text to be displayed for checking the status of a pending request. [CHAR LIMIT=44]",
      "message": "Pending Certificate Check"
   },
   "managed_status_tab_label": {
      "description": "The label text for the pending request tab. Should be very short. [CHAR LIMIT=20]",
      "message": "Pending Request"
   },
   "managed_username_placeholder": {
      "description": "A placeholder/label used to identify a username field. [CHAR LIMIT=20]",
      "message": "Username"
   },
   "managed_va_url_http_error": {
      "description": "This is an error message for when the variable va_google_url was not set to a url starting with https://. [CHAR LIMIT=100]",
      "message": "va_google_url not set to https."
   },
   "no_certificates_to_renew": {
      "description": "The user attempted to renew an existing certificate, but none were available for renewal. [CHAR LIMIT=80]",
      "message": "There are no existing certificates to renew."
   },
   "okay_button": {
      "description": "The text for a button that allows users to continue and exit a dialog box. Should be one word. [CHAR LIMIT=20]",
      "message": "Okay"
   },
   "pending_title": {
      "description": "A title for a dialog box meant to show that the request is still pending or not yet finished. This is not an error or a success. [CHAR LIMIT=20]",
      "message": "Pending"
   },
   "policy_bad_response": {
      "description": "The server issuing policy URI's returned an error code representing failure. ERROR is the error message corresponding to the code sent. [CHAR LIMIT=120]",
      "message": "Bad response when attempting to get the enrollment uris. Error message: $ERROR$",
      "placeholders": {
         "error": {
            "content": "$1",
            "example": "Internal server error."
         }
      }
   },
   "policy_timeout_error": {
      "description": "The server at the CEP endpoint did not respond in time so the entire enrollment process was aborted. The user can attempt the request again or contact their administrator to let them know of the problem. [CHAR LIMIT=200]",
      "message": "Request timed out when attempting to reach the CEP endpoint. Please try again later or contact your administrator."
   },
   "renewal_generate_pkcs10_failure": {
      "description": "Attempting to generate an embedded new certificate request failed the certificate renewal process. [CHAR LIMIT=100]",
      "message": "Generating a new certificate request to embed in a renewal request failed."
   },
   "renewal_notification_ignore": {
      "description": "The text for a button on a renewal notification. This button allows the user to ignore the current and all future notifications so that no more notifications will pop up for that certificate. [CHAR LIMIT=40]",
      "message": "Ignore All Reminders"
   },
   "renewal_notification_message": {
      "description": "This is the message for a notification that will pop up to inform a user that their certificate will expire soon, so they should go ahead and renew now. [CHAR LIMIT=100]",
      "message": "Your certificate will expire soon. Click to renew now."
   },
   "renewal_notification_remind": {
      "description": "The text for a button on a renewal notification. This button allows the user to ignore the current notification and receive another reminder notification later. [CHAR LIMIT=40]",
      "message": "Remind Me Later"
   },
   "renewal_notification_title": {
      "description": "This is the title for a notification that will pop up to inform a user that their certificate will expire soon, so they should go ahead and renew now. [CHAR LIMIT=50]",
      "message": "Certificate Renewal Reminder"
   },
   "renewal_request_key_pair_failure": {
      "description": "Attempting to retrieve the public/private key pair associated with a certificate failed in the certificate renewal process. [CHAR LIMIT=100]",
      "message": "Retrieving the key pair associated with the renewal certificate failed."
   },
   "renewal_sign_cms_failure": {
      "description": "Attempting to sign a certificate renewal request failed the certificate renewal process. [CHAR LIMIT=100]",
      "message": "Signing a renewal request failed."
   },
   "saving_bad_response": {
      "description": "The server issuing certificates returned an error code representing failure. ERROR is the error message corresponding to the code sent. [CHAR LIMIT=120]",
      "message": "Bad response when attempting to enroll a certificate. Error message: $ERROR$",
      "placeholders": {
         "error": {
            "content": "$1",
            "example": "Internal server error."
         }
      }
   },
   "saving_denied": {
      "description": "The server issuing certificates would not validate the requested certificate. [CHAR LIMIT=120]",
      "message": "The server denied the certificate request."
   },
   "saving_generate_digest_failure": {
      "description": "Attempting to digest/convert/import the subject public key into the certificate request failed. [CHAR LIMIT=100]",
      "message": "Digesting subject public key failed."
   },
   "saving_generate_export_failure": {
      "description": "Attempting to export the public key as part of the certificate request failed. [CHAR LIMIT=100]",
      "message": "Exporting public key failed."
   },
   "saving_generate_extract_failure": {
      "description": "Attempting to extract a public/private key pair failed in the certificate request generation process. [CHAR LIMIT=100]",
      "message": "Key pair extraction and saving failed."
   },
   "saving_generate_key_failure": {
      "description": "Attempting to generate a public/private key pair failed in the certificate request generation process. [CHAR LIMIT=100]",
      "message": "Key pair generation and saving failed."
   },
   "saving_generate_push_failure": {
      "description": "Attempting to assign attributes into the certificate request failed. [CHAR LIMIT=100]",
      "message": "Pushing attributes into CSR failed."
   },
   "saving_generate_sign_failure": {
      "description": "Attempting to sign the final certificate request in the generation process failed. [CHAR LIMIT=100]",
      "message": "Signing the final certificate request failed."
   },
   "saving_no_cert_failure": {
      "description": "The server issuing certificates did not return a certificate in the response to a previous request. Thus, we have nothing to store. [CHAR LIMIT=100]",
      "message": "Could not find a certificate to store in the response."
   },
   "saving_pending": {
      "description": "The server issuing certificates left the previous request as pending instead of approving or denying it. ID is the request id, and URI is the reference URI, which are both necessary to check on that pending request later. [CHAR LIMIT=200]",
      "message": "The server set the request to pending.\nRequest: $ID$\nReference: $URI$",
      "placeholders": {
         "id": {
            "content": "$1",
            "example": "17"
         },
         "uri": {
            "content": "$2",
            "example": "https://someWebAddressGoesHere/service.svc/CES"
         }
      }
   },
   "saving_store_failure": {
      "description": "Attempting to store/import the certificate specified in an HTTPS response failed. [CHAR LIMIT=100]",
      "message": "Could not store the response certificate on the machine."
   },
   "saving_template_error": {
      "description": "The server issuing certificates would not validate the requested certificate because the template specified was not allowed. [CHAR LIMIT=120]",
      "message": "The server denied the certificate request because an invalid certificate template was specified."
   },
   "saving_timeout_error": {
      "description": "The server at the CES endpoint did not respond in time so the entire enrollment process was aborted. The user can attempt the request again or contact their administrator to let them know of the problem. [CHAR LIMIT=200]",
      "message": "Request timed out when attempting to reach the CES endpoint. Please try again later or contact your administrator."
   },
   "service_account_host_error": {
      "description": "Error message displayed when credentials for the service account can not be downloaded. [CHAR LIMIT=120]",
      "message": "Could not retrieve service account credentials."
   },
   "success_title": {
      "description": "A title for a dialog box meant to show that the request succeeded without any error. [CHAR LIMIT=20]",
      "message": "Success"
   },
   "token_no_system_failure": {
      "description": "The extension attempted to locate a valid security token with id = 'system' and failed. This could mean that the device does not have privileges to call the enterprise.platformKeys API, meaning it is likely not enrolled in the domain or configured properly. It could also mean that the user attempted to get a device wide certificate but was not authorized to on this machine. [CHAR LIMIT=300]",
      "message": "Could not find a valid system token. Your device may not be enrolled in the domain, or you may not have rights to request a system certificate."
   },
   "token_no_user_failure": {
      "description": "The extension attempted to locate a valid security token with id = 'user' and failed. This could mean that the device does not have privileges to call the enterprise.platformKeys API, meaning it is likely not enrolled in the domain or configured properly. [CHAR LIMIT=200]",
      "message": "Could not find a valid user token. Your device may not be enrolled in the domain."
   },
   "token_system_unallowed_failure": {
      "description": "The user requested a device-wide/machine-wide/system certificate instead of user but the managed policy does not allow it. [CHAR LIMIT=100]",
      "message": "Enrollment by device-wide certificate is not allowed under your current policy."
   }
}
